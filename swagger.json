{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "SplitIt",
    "description": "Smart check splitting",
    "contact": {
      "name": "Jacob Luszcz",
      "email": "jacob.luszcz@gmail.com",
      "url": "http://split.ist"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "split.ist",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/checks": {
      "get": {
        "operationId": "getChecks",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "pagination token",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 100
          }
        ],
        "responses": {
          "200": {
            "description": "check response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Check"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createCheck",
        "parameters": [
          {
            "name": "check",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCheck"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "check response",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checks/{id}": {
      "get": {
        "operationId": "getCheck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "check response",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "updateCheck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "check",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Check"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "check response",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCheck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "check deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checks/{id}/entries": {
      "get": {
        "operationId": "getEntries",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "token",
            "in": "query",
            "description": "pagination token",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Entry"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entry",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "entry response",
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checks/{id}/entries/{entryId}": {
      "get": {
        "operationId": "getEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "entry response",
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "updateEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entry",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "entry response",
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteEntry",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "entry deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checks/{id}/locations": {
      "get": {
        "operationId": "getLocations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "token",
            "in": "query",
            "description": "pagination token",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "location response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Location"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "operationId": "createLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "location response",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/checks/{id}/locations/{locationId}": {
      "get": {
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "location response",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "updateLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "location response",
            "schema": {
              "$ref": "#/definitions/Location"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "location deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/Check"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "user deleted"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NewCheck": {
      "type": "object",
      "required": [
        "description",
        "date"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Check": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewCheck"
        },
        {
          "required": [
            "id",
            "createTimestamp"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "createTimestamp": {
              "type": "string",
              "format": "dateTime"
            },
            "locationIds": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            },
            "entryIds": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      ]
    },
    "NewEntry": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "Entry": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewEntry"
        },
        {
          "required": [
            "id",
            "createTimestamp",
            "amount"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "createTimestamp": {
              "type": "string",
              "format": "dateTime"
            },
            "amount": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "locationId": {
              "type": "string",
              "format": "uuid"
            },
            "ownerIds": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      ]
    },
    "NewLocation": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "Location": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewLocation"
        },
        {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "tax": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "tip": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        }
      ]
    },
    "NewUser": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NewUser"
        },
        {
          "required": [
            "id",
            "createTimestamp"
          ],
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "createTimestamp": {
              "type": "string",
              "format": "dateTime"
            }
          }
        }
      ]
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}